>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry


>>> bg = BaseGeometry()



#15 check for Exception: area() is not implemented
>>> bg.area()
Traceback (most recent call last):
...
Exception: area() is not implemented

#16 #17 check for integer_validator without arguments
>>> bg.integer_validator()
Traceback (most recent call last):
...
TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

#18 check for normal case of integer_validator valid name(string) and valid value (integer)
>>> bg.integer_validator("my_int", 12)

#19 #20 check for integer_validator case where value is 0
>>> bg.integer_validator("age", 0)
Traceback (most recent call last):
...
ValueError: age must be greater than 0

#21 check for integer_validator case where value is string
>>> bg.integer_validator("name", "John")
Traceback (most recent call last):
...
TypeError: name must be an integer

#22 check integer_validator where value is tuple
>>> bg.integer_validator("age", (5,))
Traceback (most recent call last):
...
TypeError: age must be an integer

#23 check integer_validator where value is list
>>> bg.integer_validator("age", [3])
Traceback (most recent call last):
...
TypeError: age must be an integer

#24 check integer_validator where value is Boolean
>>> bg = BaseGeometry()
>>> bg.integer_validator("name", True)
Traceback (most recent call last):
            ...
TypeError: name must be an integer

#25 check integer_validator where value is dictionair
>>> bg.integer_validator("age", {3, 4})
Traceback (most recent call last):
...
TypeError: age must be an integer

#26 check integer_validator where value is None
>>> bg.integer_validator("age", None)
Traceback (most recent call last):
...
TypeError: age must be an integer




